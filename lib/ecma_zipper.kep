/**
 * @fileOverview ECMA AST zipper. 
 */
package (
    ecmaZipper
    
    getChild
    getChildren
    construct)
with
    import 'nu-stream::gen' {range},
    import 'nu-stream::stream' {foldl from NIL},
    import 'neith::tree' {treeZipper},
    import 'khepri-ast::node' {Node modify}
in {

var buildArray := \pairs ->
    foldl(
        \p {key value} -> {
            p.(key) = value;
            return p;
        },
        [],
        pairs);

/**
 * Get the children of a node.
 */
getChildren := \node ->
    ?Array.isArray node
        :range(0, node.length)
    :?node && node.children
        :from(node.children)
    :NIL;

/**
 * Get the child of a node.
 */
getChild = (.);

/**
 * Reconstruct a node
 */
construct := \node pairs values ->
    ?Array.isArray node
        :buildArray(pairs)
    :?node && node.children
        :modify(node, values(), {})
    :node;

/**
 * Create a new ECMA AST Zipper.
 * 
 * @param root Root of AST.
 */
ecmaZipper := treeZipper@(
    getChildren,
    getChild,
    construct);

}